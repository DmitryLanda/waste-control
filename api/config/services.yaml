# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Money\Infrastructure\AccountRepository:
        $aggregateRootClassName: 'App\Money\Domain\Account'
        $messageRepository: '@account.message_repository'
        $snapshotRepository: '@account.snapshot_repository'
        $aggregateRootRepository: '@account.aggregate_root_repository'

    EventSauce\UuidEncoding\UuidEncoder:
        class: EventSauce\UuidEncoding\StringUuidEncoder

    EventSauce\EventSourcing\Serialization\MessageSerializer:
         class: EventSauce\EventSourcing\Serialization\ConstructingMessageSerializer

    account.snapshot_repository:
         class: App\Shared\Snapshot\DoctrineSnapshotRepository
         arguments:
             $aggregateIdClass: 'App\Money\Domain\AccountId'
             $tableName: 'account_snapshots'

    account.aggregate_root_repository:
         class: EventSauce\EventSourcing\EventSourcedAggregateRootRepository
         arguments:
             $aggregateRootClassName: 'App\Money\Domain\Account'
             $messageRepository: '@account.message_repository'

    account.message_repository:
        class: EventSauce\MessageRepository\DoctrineMessageRepository\DoctrineUuidV4MessageRepository
        arguments:
            $tableName: 'account_events'

    App\Shared\ParamConverter\JsonConverter:
        tags:
            - { name: 'request.param_converter', converter: 'json_converter' }